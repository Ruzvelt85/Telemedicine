{
  "Properties": {
    "Application": "MobileClientBffService.WebAPI"
  },
  "AllowedHosts": "*",
  "SaturationMeasurementSettings": {
    "MaxRawItemsValidationCountLimit": 100,
    "MaxRawItemsToPassToMeasurementDSCountLimit": 30
  },
  "JwtBearerSettings": {
    "IsOpenIdConnectUserInfoProviderUsed": false
  },
  "InfoLogExceptionFilterSettings": {
    "ALL_ALL_MoodAlreadyCreatedTodayException_ALL": {
      "Type": "Telemedicine.Services.HealthMeasurementDomainService.API.Common.Exceptions.MoodAlreadyCreatedTodayException"
    }
  },
  "RestServiceSettings": {
    "UsersQueryService": {
      "Name": "User Query Service",
      "Url": "http://host.docker.internal:5001",
      "ServiceContract": "Telemedicine.Services.HealthCenterStructureDomainService.API.Common.UsersQueryService.IUsersQueryService, Telemedicine.Services.HealthCenterStructureDomainService.API.Common",
      "HealthCheckSettings": {
        "IsEnabled": true
      }
    },
    "MobileClientBffQueryService": {
      "Name": "Appointment Service",
      "Url": "http://host.docker.internal:5002",
      "ServiceContract": "Telemedicine.Services.AppointmentDomainService.API.Common.MobileClientBffQueryService.IMobileClientBffQueryService, Telemedicine.Services.AppointmentDomainService.API.Common",
      "HealthCheckSettings": {
        "IsEnabled": true
      }
    },
    "MoodMeasurementCommandService": {
      "Name": "Health Measurement Service",
      "Url": "http://host.docker.internal:5006",
      "ServiceContract": "Telemedicine.Services.HealthMeasurementDomainService.API.Common.Mood.IMoodMeasurementCommandService, Telemedicine.Services.HealthMeasurementDomainService.API.Common",
      "HealthCheckSettings": {
        "IsEnabled": true
      }
    },
    "MoodMeasurementQueryService": {
      "Name": "Mood Measurement Query Service",
      "Url": "http://host.docker.internal:5006",
      "ServiceContract": "Telemedicine.Services.HealthMeasurementDomainService.API.Common.Mood.IMoodMeasurementQueryService, Telemedicine.Services.HealthMeasurementDomainService.API.Common",
      "HealthCheckSettings": {
        "IsEnabled": true
      }
    },
    "BloodPressureMeasurementCommandService": {
      "Name": "Blood Pressure Measurement Command Service",
      "Url": "http://host.docker.internal:5006",
      "ServiceContract": "Telemedicine.Services.HealthMeasurementDomainService.API.Common.BloodPressure.IBloodPressureMeasurementCommandService, Telemedicine.Services.HealthMeasurementDomainService.API.Common",
      "HealthCheckSettings": {
        "IsEnabled": true
      }
    },
    "SaturationMeasurementCommandService": {
      "Name": "Saturation Measurement Command Service",
      "Url": "http://host.docker.internal:5006",
      "ServiceContract": "Telemedicine.Services.HealthMeasurementDomainService.API.Common.Saturation.ISaturationMeasurementCommandService, Telemedicine.Services.HealthMeasurementDomainService.API.Common",
      "HealthCheckSettings": {
        "IsEnabled": true
      }
    },
    "PulseRateMeasurementCommandService": {
      "Name": "Pulse Rate Measurement Command Service",
      "Url": "http://host.docker.internal:5006",
      "ServiceContract": "Telemedicine.Services.HealthMeasurementDomainService.API.Common.PulseRate.IPulseRateMeasurementCommandService, Telemedicine.Services.HealthMeasurementDomainService.API.Common",
      "HealthCheckSettings": {
        "IsEnabled": true
      }
    },
    "AppointmentQueryService": {
      "Name": "Appointment Query Service",
      "Url": "http://host.docker.internal:5002",
      "ServiceContract": "Telemedicine.Services.AppointmentDomainService.API.Common.AppointmentQueryService.IAppointmentQueryService, Telemedicine.Services.AppointmentDomainService.API.Common",
      "HealthCheckSettings": {
        "IsEnabled": true
      }
    },
    "VideoConferenceQueryService": {
      "Name": "Video Conference Query Service",
      "Url": "http://host.docker.internal:5005",
      "ServiceContract": "Telemedicine.Services.VideoConfIntegrService.API.Common.VideoConferenceQueryService.IVideoConferenceQueryService, Telemedicine.Services.VideoConfIntegrService.API.Common",
      "HealthCheckSettings": {
        "IsEnabled": true
      }
    }
  },
  "VideoConferenceConnectionSettings": {
    "TimeInSecondsBeforeAppointmentStartWhenGettingConnectionInfoAllowed": 120
  },
  "LogUserIdHeaderMiddlewareSettings": {
    "IsEnabled": true
  },
  "UserInfoProviderSettings": {
    "IsEnabled": true,
    "UserInfoProviderType": "CognitoApi"
  },
  "IgnoreLoggingResponseBodySettings": {
    "GET_api/data": {
      "HttpVerb": "GET",
      "Path": "api/data"
    }
  }
}
